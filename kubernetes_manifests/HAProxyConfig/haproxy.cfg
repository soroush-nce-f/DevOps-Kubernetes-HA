global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http



frontend frontend-client-https
    bind *:443
    mode tcp
    option tcplog
    default_backend backend-client-https

backend backend-client-https
    option httpchk get /healthz
    http-check expect status 200
    mode tcp   
    option ssl-hello-chk
    balance roundrobin
    #hash-type consistent
    
    server ip-10-100-8-144 10.100.8.144:30443 check port 30443 #ssl verify none
    server ip-10-100-8-145 10.100.8.145:30443 check port 30443
    server ip-10-100-8-146 10.100.8.146:30443 check port 30443
    server ip-10-100-8-147 10.100.8.147:30443 check port 30443
    server ip-10-100-8-148 10.100.8.148:30443 check port 30443
    server ip-10-100-8-149 10.100.8.149:30443 check port 30443
    server ip-10-100-8-150 10.100.8.150:30443 check port 30443
    server ip-10-100-8-164 10.100.8.164:30443 check port 30443
    server ip-10-100-8-232 10.100.8.232:30443 check port 30443
    server ip-10-100-8-233 10.100.8.233:30443 check port 30443
    server ip-10-100-8-235 10.100.8.235:30443 check port 30443
    server ip-10-100-8-236 10.100.8.236:30443 check port 30443

frontend frontend-client-http
    bind *:80
    mode tcp
    option tcplog
    default_backend backend-client-http

backend backend-client-http
    option httpchk get /healthz
    http-check expect status 200
    mode tcp   
    option ssl-hello-chk
    balance roundrobin
    #hash-type consistent
    
    server ip-10-100-8-144 10.100.8.144:30080 check port 30443 #ssl verify none
    server ip-10-100-8-145 10.100.8.145:30080 check port 30443
    server ip-10-100-8-146 10.100.8.146:30080 check port 30443
    server ip-10-100-8-147 10.100.8.147:30080 check port 30443
    server ip-10-100-8-148 10.100.8.148:30080 check port 30443
    server ip-10-100-8-149 10.100.8.149:30080 check port 30443
    server ip-10-100-8-150 10.100.8.150:30080 check port 30443
    server ip-10-100-8-164 10.100.8.164:30080 check port 30443
    server ip-10-100-8-232 10.100.8.232:30080 check port 30443
    server ip-10-100-8-233 10.100.8.233:30080 check port 30443
    server ip-10-100-8-235 10.100.8.235:30080 check port 30443
    server ip-10-100-8-236 10.100.8.236:30080 check port 30443

frontend frontend-client-direct
    bind *:30000-32000
    mode tcp
    option tcplog
    default_backend backend-client-http-direct

backend backend-client-http-direct
    option httpchk get /healthz
    http-check expect status 200
    mode tcp   
    option ssl-hello-chk
    balance roundrobin
    #hash-type consistent
    
    server ip-10-100-8-144 10.100.8.144 check  #ssl verify none
    server ip-10-100-8-145 10.100.8.145 check
    server ip-10-100-8-146 10.100.8.146 check
    server ip-10-100-8-147 10.100.8.147 check
    server ip-10-100-8-148 10.100.8.148 check
    server ip-10-100-8-149 10.100.8.149 check
    server ip-10-100-8-150 10.100.8.150 check
    server ip-10-100-8-164 10.100.8.164 check
    server ip-10-100-8-232 10.100.8.232 check
    server ip-10-100-8-233 10.100.8.233 check
    server ip-10-100-8-235 10.100.8.235 check
    server ip-10-100-8-236 10.100.8.236 check

frontend kubernetes-frontend
    bind *:6443
    mode tcp
    option tcplog
    default_backend kubernetes-backend

backend kubernetes-backend
    option httpchk GET /healthz
    http-check expect status 200
    mode tcp    
    option ssl-hello-chk
    balance roundrobin

    server ip-10-100-8-142 10.100.8.142:6443 check fall 3 rise 2
    server ip-10-100-8-143 10.100.8.143:6443 check fall 3 rise 2
    server ip-10-100-8-163 10.100.8.163:6443 check fall 3 rise 2