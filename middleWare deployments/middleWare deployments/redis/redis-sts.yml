---
apiVersion: v1
kind: Namespace
metadata:
  name: redis-cluster

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-cm
  namespace: redis-cluster
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no

---
apiVersion: v1
kind: Service
metadata:
  name: hit-counter-lb
  namespace: redis-cluster
spec:
  type: NodePort
  ports:
  - port: 5000
    protocol: TCP
    nodePort: 30110
  selector:
      app: myapp
    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hit-counter-app
  namespace: redis-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: calinrus/api-redis-ha:1.0
        ports:
        - containerPort: 5000

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-cluster-pv
  namespace: redis-cluster
  labels:
    type: glusterfs
    app: redis
spec:
  storageClassName: managed-gluster
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  glusterfs:
    endpoints: glusterfs-cluster
    path: k8s-volume/redis
    readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-cluster-pvc
  namespace: redis-cluster
  labels:
    app: redis
spec:
  storageClassName: managed-gluster
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: "redis-cluster-pv"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster-sts
  namespace: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster-sts
  template:
    metadata:
      labels:
        app: redis-cluster-sts
    spec:
      containers:
      - name: redis
        image: docker.io/redis:5.0.1-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: redis-cluster-pv
          mountPath: /data
          readOnly: false
        securityContext:
          runAsGroup: 0
          runAsUser: 0
      volumes:
      - name: redis-cluster-pv
        persistentVolumeClaim:
          claimName: redis-cluster-pvc
      - name: conf
        configMap:
          name: redis-cluster-cm
          defaultMode: 0755      
        
      

  # volumeClaimTemplates:
  # - metadata:
  #     name: redis-cluster-pvc
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce
  #     storageClassName: managed-gluster
  #     resources:
  #       requests:
  #         storage: 50Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: redis-cluster
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster-sts